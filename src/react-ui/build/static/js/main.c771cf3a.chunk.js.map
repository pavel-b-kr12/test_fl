{"version":3,"sources":["const.js","utils.js","components/CountDownTimer/CountDownTimer.jsx","assets/main-bg.jpg","assets/main-bg-blue.jpg","assets/main-bg-green.jpg","components/Flowers/Flowers.jsx","assets/main-bg-orange.jpg","assets/main-bg-pink.jpg","assets/main-bg-violet.jpg","assets/main-bg-yellow.jpg","components/Controls/Controls.jsx","assets/lotus-aqua.svg","assets/lotus-green.svg","assets/lotus-orange.svg","assets/lotus-pink.svg","assets/lotus-violet.svg","assets/lotus-yellow.svg","assets/logo.svg","components/LockedScreen/LockedScreen.jsx","assets/timer-bg.svg","components/ScreenTest/ScreenTest.jsx","components/Game/Game.jsx","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["MQTT_TOPIC_PUBLISH","GAME_TIME_PLAY","COLORS","FAKE_COLORS","COLOR_DEFAULT","user_id","parseInt","localStorage","getItem","Math","floor","random","setItem","generateMessage","color","endSes_d","idle_d","JSON","stringify","CountDownTimer","timeLeft","timerClass","className","flowers","backgroundImage","backgroundImageBlue","backgroundImageGreen","Flowers","activeColor","activeFlower","Object","keys","map","flower","alt","src","Controls","gameTime","setActiveColor","mqtt","i","onClick","now_t","Date","getTime","gm_active_till_t","publish","onSelectColor","style","background","LockedScreenHello","href","target","rel","logo","lotusAqua","lotusGreen","lotusOrange","lotusPink","lotusViolet","lotusYellow","window","location","reload","LockedScreen0","LockedScreenNoConnect","LockedScreenEnd","ScreenTest","data","onSelectEff","effNm","req","generateMessageTest","console","log","onSetC","r","g","b","onSetCRGB","CRGB","data0","getCountdown","s","round","user_active","useState","countdown_t","setCountdown","useEffect","timer","setInterval","clearInterval","removeItem","id","type","min","max","onInput","document","getElementById","value","timerBg","subscribe","topic","setGameTime","length","reduce","rgbStr","col","rgbStringify","setGameTimer","countdown","bRunRecently","redir","search","includes","App","showHello","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","mqttProps","process"],"mappings":"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","file":"static/js/main.c771cf3a.chunk.js","sourcesContent":["export const MQTT_TOPIC_SUBSCRIBE = 'flowers/ESP_LED';\nexport const MQTT_TOPIC_PUBLISH = 'flowers/ESP_LED/set';\n\n//export const GAME_TIME_PLAY = Number.parseInt(process.env.REACT_APP_GAME_TIME_PLAY) || 60; //send MQTT as 'endSes_d'\nexport const GAME_TIME_PLAY = 60; //send MQTT as 'endSes_d'\nexport const idle_d = 30; //send MQTT as 'idle_d'\n\nexport const COLORS = {\n  'rgb(255, 100, 0)': { \"r\": 255, \"g\": 100, \"b\": 0 }, // orange\n  'rgb(255, 20, 147)': { \"r\": 255, \"g\": 20, \"b\": 147 }, // pink\n  'rgb(200, 0, 255)': { \"r\": 200, \"g\": 0, \"b\": 255 }, // violet\n  'rgb(0, 255, 255)': { \"r\": 0, \"g\": 255, \"b\": 255 }, // aqua\n  'rgb(0, 225, 0)': { \"r\": 0, \"g\": 225, \"b\": 0 }, // green\n  'rgb(255, 255, 0)': { \"r\": 255, \"g\": 255, \"b\": 0 } // yellow\n};\n\nexport const FAKE_COLORS = {\n  'rgb(255, 100, 0)': 'rgb(251, 206, 91)',\n  'rgb(255, 20, 147)': 'rgb(248, 184, 211)',\n  'rgb(200, 0, 255)': 'rgb(186, 111, 168)',\n  'rgb(0, 255, 255)': 'rgb(162, 218, 219)',\n  'rgb(0, 225, 0)': 'rgb(213, 226, 116)',\n  'rgb(255, 255, 0)': 'rgb(255, 248, 161)'\n}\n\nexport const COLOR_DEFAULT = 'rgb(255, 255, 255)';\n\nexport var user_id = parseInt(localStorage.getItem('user_id'));\nif(!user_id)\n{\n\tuser_id=Math.floor(Math.random()*100000);\n\tlocalStorage.setItem('user_id',user_id);\n}\n","// import {\n  // GAME_TIME_PLAY\n// } from '../src/const';\n\nexport const generateMessage = (color,user_id, endSes_d, idle_d) => (\n  `{\"state\": \"ON\",\"brightness\": 255,\"color\": ${JSON.stringify(color)},\"transition\": 0,\"user_id\": ${JSON.stringify(user_id)},\"endSes_d\": ${endSes_d},\"idle_d\": ${idle_d}}`\n);\nexport const generateMessageTest = (color,user_id, endSes_d, idle_d, effNm) => (\n  `{\"state\": \"ON\",\"brightness\": 255,\"color\": ${JSON.stringify(color)},\"transition\": 0,\"user_id\": ${JSON.stringify(user_id)},\"endSes_d\": ${endSes_d},\"idle_d\": ${idle_d},\"effect\":${effNm}}`\n);\n\nexport const rgbStringify = (color = {}) => Object.keys(color).reduce((rgbStr, col) => (col === 'b'\n    ? `${rgbStr}${color[col]})`\n    : `${rgbStr}${color[col]}, `\n  ), 'rgb(');\n\nexport const calculateTimeLeft = (time) => {\n  const minutes = Math.floor((time / 60) % 60);\n  const seconds = Math.floor(time % 60);\n  if(time<=0) return ['','']; //blank w dots\n  //if(time<=0) return ['0',GAME_TIME_PLAY];\n  return [\n    `0${minutes}`,\n    seconds < 10 ? `0${seconds}` : seconds\n  ]\n};\n","import React from 'react';\nimport {\n  GAME_TIME_PLAY\n} from '../../const';\n\nimport './styles.css';\n//import { calculateTimeLeft } from '../../utils';\n\nconst CountDownTimer = ({ timeLeft, timerClass = '' }) => {\n\t//sec only\n\tif(timeLeft<=0) timeLeft=GAME_TIME_PLAY;\n  return (\n    <section className={timerClass ? `timer ${timerClass}` : 'timer'}>\n      {timeLeft}\n    </section>\n  )\n  /* //min:sec\n  const [minutes, seconds] = calculateTimeLeft(timeLeft);\n\n  return (\n    <section className={timerClass ? `timer ${timerClass}` : 'timer'}>\n      {minutes} : {seconds}\n    </section>\n  )\n  */\n};\n\nexport default CountDownTimer;\n","export default __webpack_public_path__ + \"static/media/main-bg.f8215fc8.jpg\";","export default __webpack_public_path__ + \"static/media/main-bg-blue.f8e708b8.jpg\";","export default __webpack_public_path__ + \"static/media/main-bg-green.d9f1c009.jpg\";","import React from 'react';\n\nimport './styles.css';\nimport backgroundImage from '../../assets/main-bg.jpg';\nimport backgroundImageBlue from '../../assets/main-bg-blue.jpg';\nimport backgroundImageGreen from '../../assets/main-bg-green.jpg';\nimport backgroundImageOrange from '../../assets/main-bg-orange.jpg';\nimport backgroundImagePink from '../../assets/main-bg-pink.jpg';\nimport backgroundImageViolet from '../../assets/main-bg-violet.jpg';\nimport backgroundImageYellow from '../../assets/main-bg-yellow.jpg';\nimport { COLOR_DEFAULT } from '../../const';\n\nconst flowers = {\n  'rgb(255, 255, 255)': backgroundImage,\n  'rgb(251, 206, 91)': backgroundImageOrange,\n  'rgb(248, 184, 211)': backgroundImagePink,\n  'rgb(186, 111, 168)': backgroundImageViolet,\n  'rgb(162, 218, 219)': backgroundImageBlue,\n  'rgb(213, 226, 116)': backgroundImageGreen,\n  'rgb(255, 248, 161)': backgroundImageYellow\n}\n\nconst Flowers = ({ activeColor }) => {\n  const activeFlower = activeColor ? activeColor : COLOR_DEFAULT;\n\n  return (\n    <section className='flowers-field'>\n      {Object.keys(flowers).map(flower => (\n        <img\n          key={flower}\n          alt=\"Alive Flowers are watching you\"\n          className={flower === activeFlower ? `flowers active` : 'flowers'}\n          src={flowers[flower]}\n         />\n      ))}\n      <p className='flowers-info'>Обери мені відтінок та розфарбуй квіти.</p>\n    </section>\n  )\n}\n\nexport default Flowers;\n","export default __webpack_public_path__ + \"static/media/main-bg-orange.087156be.jpg\";","export default __webpack_public_path__ + \"static/media/main-bg-pink.7e61175a.jpg\";","export default __webpack_public_path__ + \"static/media/main-bg-violet.0e479edf.jpg\";","export default __webpack_public_path__ + \"static/media/main-bg-yellow.94fa6b70.jpg\";","import React from 'react';\n\nimport './styles.css';\nimport { COLORS, FAKE_COLORS, MQTT_TOPIC_PUBLISH, GAME_TIME_PLAY, idle_d,  user_id } from '../../const';\nimport { generateMessage } from '../../utils';\nimport CountDownTimer from '../CountDownTimer';\nimport Flowers from '../Flowers';\n\nconst Controls = ({ gameTime, activeColor, setActiveColor, mqtt }) => {\n  const onSelectColor = color => {\n\tlet now_t = new Date().getTime();\n\tlet gm_active_till_t = parseInt(localStorage.getItem('gm_active_till_t'));\n\tlet recently_d=2*60*1000;\n\tif(!gm_active_till_t || now_t < gm_active_till_t || now_t>gm_active_till_t+recently_d)\n\t{\n\t\tmqtt.publish(\n\t\t  MQTT_TOPIC_PUBLISH,\n\t\t  generateMessage(COLORS[color], user_id, GAME_TIME_PLAY, idle_d)\n\t\t);\n\t\tsetActiveColor(color);\n\t}\n  };\n\n  return (\n    <section className='controls-wrap'>\n      <Flowers activeColor={FAKE_COLORS[activeColor]} />\n      <section className='controls'>\n        <ul>\n          {Object.keys(COLORS).map((color, i) => (\n            <li\n              key={color}\n              className={activeColor === color ? `button-${i+1} active` : `button-${i+1}`}\n              onClick={() => onSelectColor(color)}\n              style={{ background: FAKE_COLORS[color] }}\n            />\n          ))}\n        </ul>\n        <CountDownTimer\n          timerClass='controls-timer'\n          timeLeft={gameTime}\n        />\n      </section>\n    </section>\n  );\n};\n\nexport default Controls;\n","export default __webpack_public_path__ + \"static/media/lotus-aqua.e0d01c2a.svg\";","export default __webpack_public_path__ + \"static/media/lotus-green.92564941.svg\";","export default __webpack_public_path__ + \"static/media/lotus-orange.17c89be0.svg\";","export default __webpack_public_path__ + \"static/media/lotus-pink.87b2eeeb.svg\";","export default __webpack_public_path__ + \"static/media/lotus-violet.8a14d3ad.svg\";","export default __webpack_public_path__ + \"static/media/lotus-yellow.dc894035.svg\";","export default __webpack_public_path__ + \"static/media/logo.ea23c954.svg\";","import React from 'react';\n\nimport './styles.css';\nimport lotusAqua from '../../assets/lotus-aqua.svg';\nimport lotusGreen from '../../assets/lotus-green.svg'\nimport lotusOrange from '../../assets/lotus-orange.svg'\nimport lotusPink from '../../assets/lotus-pink.svg'\nimport lotusViolet from '../../assets/lotus-violet.svg'\nimport lotusYellow from '../../assets/lotus-yellow.svg'\n// import timerBg from '../../assets/timer-bg.svg';\n// import CountDownTimer from '../CountDownTimer';\n\n\nimport logo from '../../assets/logo.svg';\n// <h3>РОЗФАРБУЙ МЕНЕ!</h3>\n//TODO reload better https://stackoverflow.com/questions/53215285/how-can-i-force-a-component-to-re-render-with-hooks-in-react\nexport const LockedScreenHello = () => (\n\n  <section className='locked-screen'>\n      <a href='https://tsum.ua/' className='logo' target='_blank' rel=\"noreferrer\">\n        <img src={logo} alt='ЦУМ Киев'/>\n      </a>\n    <div className=\"info\">\n      <p className='locked-info'>За мить ти відчуєш<br />\n\t  себе художником.</p>\n\t  <p className='locked-info'>РОЗФАРБУЙ МЕНЕ!</p>\n    <div className='locked-img'>\n      <img className='lotus-1' src={lotusAqua} alt=\"lotusAqua\" />\n      <img className='lotus-2' src={lotusGreen} alt=\"lotusGreen\" />\n      <img className='lotus-3' src={lotusOrange} alt=\"lotusOrange\" />\n      <img className='lotus-4' src={lotusPink} alt=\"lotusPink\" />\n      <img className='lotus-5' src={lotusViolet} alt=\"lotusViolet\" />\n      <img className='lotus-6' src={lotusYellow} alt=\"lotusYellow\" />\n    </div>\n       <button className=\"button\" onClick={function() {\n\t\t////-------\tstart timer imediately\n\t\t/*\n\t\tlet gm_active_till_t = parseInt(localStorage.getItem('gm_active_till_t'));\n\t\tif(!gm_active_till_t) //at start of active\n\t\t{\n\t\t\tgm_active_till_t=Math.floor(now_t+GAME_TIME_PLAY*1000);\n\t\t\tlocalStorage.setItem('gm_active_till_t',gm_active_till_t);\n\t\t}\n\t\t*/\n\t\t//-------\t\t\n\t\tlocalStorage.setItem('showHello', new Date().getTime()); \n\t\t   window.location.reload();\n\t   }}>Розпочати</button>\n    </div>\n  </section>\n);\n\nexport const LockedScreen0 = () => (\n  <section className='locked-screen'>\n      <a href='https://tsum.ua/' className='logo' target='_blank' rel=\"noreferrer\">\n        <img src={logo} alt='ЦУМ Киев'/>\n      </a>\n    <p className='locked-info'>Зачекай, будь ласка,</p>\n    <p className='locked-info'>на свій сеанс.</p>\n    <p className='locked-info'>Наразі хтось інший</p>\n    <p className='locked-info'>створює шедевр.</p>\n    <div className='locked-img'>\n      <img className='lotus-1' src={lotusAqua} alt=\"lotusAqua\" />\n      <img className='lotus-2' src={lotusGreen} alt=\"lotusGreen\" />\n      <img className='lotus-3' src={lotusOrange} alt=\"lotusOrange\" />\n      <img className='lotus-4' src={lotusPink} alt=\"lotusPink\" />\n      <img className='lotus-5' src={lotusViolet} alt=\"lotusViolet\" />\n      <img className='lotus-6' src={lotusYellow} alt=\"lotusYellow\" />\n    </div>\n  </section>\n);\n\nexport const LockedScreenNoConnect = () => (\n  <section className='locked-screen'>\n      <a href='https://tsum.ua/' className='logo' target='_blank' rel=\"noreferrer\">\n        <img src={logo} alt='ЦУМ Киев'/>\n      </a>\n    <p className='locked-info'>Вибачайте,</p>\n    <p>нема зв'язку</p>\n    <p>з сервером  :(</p>\n    <div className='locked-img'>\n      <img className='lotus-1' src={lotusAqua} alt=\"lotusAqua\" />\n      <img className='lotus-2' src={lotusGreen} alt=\"lotusGreen\" />\n      <img className='lotus-3' src={lotusOrange} alt=\"lotusOrange\" />\n      <img className='lotus-4' src={lotusPink} alt=\"lotusPink\" />\n      <img className='lotus-5' src={lotusViolet} alt=\"lotusViolet\" />\n      <img className='lotus-6' src={lotusYellow} alt=\"lotusYellow\" />\n    </div>\n  </section>\n);\n\nexport const LockedScreenEnd = (/*{ appTime }*/) => (\n  <section className='locked-screen'>\n      <a href='https://tsum.ua/' className='logo' target='_blank' rel=\"noreferrer\">\n        <img src={logo} alt='ЦУМ Киев'/>\n      </a>\n    <p className='locked-info'>Дякую за твій дотик!</p>\n    <p>Ти справжній митець.</p>\n    <p>Спробуй ще</p>\n    <p>через 2 хвилини.</p>\n    <div className='locked-img'>\n      <img className='lotus-1' src={lotusAqua} alt=\"lotusAqua\" />\n      <img className='lotus-2' src={lotusGreen} alt=\"lotusGreen\" />\n      <img className='lotus-3' src={lotusOrange} alt=\"lotusOrange\" />\n      <img className='lotus-4' src={lotusPink} alt=\"lotusPink\" />\n      <img className='lotus-5' src={lotusViolet} alt=\"lotusViolet\" />\n      <img className='lotus-6' src={lotusYellow} alt=\"lotusYellow\" />\n    </div>\n\t<button className=\"button\" onClick={function() {localStorage.setItem('showHello', new Date().getTime()); window.location='https://TSUM.UA'}}>TSUM.UA</button>\n    {/* <div className='timer-wrapper'>\n      <img src={timerBg} alt='timer' className='timer-bg' />\n      <CountDownTimer timeLeft={appTime} />\n    </div> */}\n  </section>\n);\n","export default __webpack_public_path__ + \"static/media/timer-bg.eda28634.svg\";","import React, { useState, useEffect } from 'react';\n\nimport { MQTT_TOPIC_PUBLISH, GAME_TIME_PLAY, idle_d, user_id } from '../../const';\nimport { generateMessage, generateMessageTest } from '../../utils';\n\nimport './styles.css';\nimport timerBg from '../../assets/timer-bg.svg';\n\nimport CountDownTimer from '../CountDownTimer';\n\nexport const ScreenTest = ({ mqtt, data }) => {\n  const onSelectEff = effNm => {\n\t  let req= generateMessageTest('{ \"r\": 99, \"g\": 0, \"b\": 0 }', user_id, GAME_TIME_PLAY, idle_d, effNm);\n\t  console.log(effNm,req);\n    mqtt.publish(\n      MQTT_TOPIC_PUBLISH,\n      req\n    );\n    //setActiveColor(color);\n  };\n  const onSetC = (r,g,b) => {\n\t  let req= generateMessage(`{ \"r\": ${r}, \"g\": ${g}, \"b\": ${b} }`, user_id, GAME_TIME_PLAY, idle_d);\n\t  console.log(req);\n    mqtt.publish(\n      MQTT_TOPIC_PUBLISH,\n      req\n    );\n  };\n  const onSetCRGB = () => {\n\t  let req= generateMessage(`{ \"r\": ${CRGB.r}, \"g\": ${CRGB.g}, \"b\": ${CRGB.b} }`, user_id, GAME_TIME_PLAY, idle_d);\n\t  console.log('onSetCRGB',req);\n    mqtt.publish(\n      MQTT_TOPIC_PUBLISH,\n      req\n    );\n  };\n\nvar CRGB={r:0,g:0,b:0};\nvar data0='';\nvar data0user_active='';\n// const [data0, setdata0] = useState(null);\n// const [data0user_active, setdata0user_active] = useState(null);\n\t\t// <p>data[0]: {data0}</p>\n\t\t// <p>data[0].user_active: {data0user_active}</p>\nconst getCountdown = () => {\n\tlet now_t = new Date().getTime();\n\tlet gm_active_till_t = parseInt(localStorage.getItem('gm_active_till_t'));\n\t//console.log(!gm_active_till_t, now_t)\n\tlet s=gm_active_till_t?(Math.round((gm_active_till_t - now_t) / 1000)):'?';\n\tdata0=data[0];\n\ts+='  '+data0;\n\tif(data0)\n\t{\n\t\tdata0user_active=data0.user_active;\n\t\ts+='  '+data0user_active;\n\t}\n\t\t//s+='  '+data[0].user_active;\n\tconsole.log(data0)\n\t\n\treturn  s;\n}\nconst [countdown_t, setCountdown] = useState(getCountdown());\n\nuseEffect(() => {\n  const timer = setInterval(() => {\n    setCountdown(getCountdown());\n  }, 1000);\n  return () => clearInterval(timer);\n});\n//, [countdown_t]);\n\n\n  return (\n  <section className='locked-screen'>\n    <p className='locked-info'></p>\n\t<button className='btn1' onClick={() => onSelectEff('rnd')}>rnd</button>\n\t<button className='btn1' onClick={() => onSelectEff('fade_all_but_1')}>fade_all_but_1</button>\n\t<button className='btn1' onClick={() => onSelectEff('blink_1')}>blink_1 (TODO)</button>\n\t<button className='btn1' onClick={() => onSelectEff('epileptogen')}>epileptogen (TODO)</button>\n\t<button className='btn1' onClick={() => onSetC(255,0,0)}>R</button>\n\t<button className='btn1' onClick={() => onSetC(0,255,0)}>G</button>\n\t<button className='btn1' onClick={() => onSetC(0,0,255)}>B</button>\n\t<button className='btn1' onClick={() => onSetC(0,0,0)}>0</button>\n\t<button className='btn1' onClick={() => onSetC(255,255,255)}>255,255,255</button>\n\t<button className='btnB' onClick={() => {localStorage.setItem('gm_active_till_t',Math.floor(new Date().getTime()+20*1000));}}>set timer 20</button>\n\t<button className='btnB' onClick={() => {localStorage.removeItem('gm_active_till_t');}}>clear timer</button>\n\t<button className='btnB' onClick={() => {localStorage.removeItem('gm_active_till_t');localStorage.removeItem('user_id');user_id=null;}}>remove user</button>\n\t<input className='rangeCRGB' id='inr' type=\"range\" min=\"0\" max=\"255\" onInput={function(){ CRGB.r=document.getElementById(\"inr\").value; onSetCRGB();}}/>\n\t<input className='rangeCRGB' id='ing' type=\"range\" min=\"0\" max=\"255\" onInput={function(){ CRGB.g=document.getElementById(\"ing\").value; onSetCRGB();}}/>\n\t<input className='rangeCRGB' id='inb' type=\"range\" min=\"0\" max=\"255\" onInput={function(){ CRGB.b=document.getElementById(\"inb\").value; onSetCRGB();}}/>\n\t\n    <div className='timer-wrapper'>\n      <img src={timerBg} alt='timer' className='timer-bg' />\n      <CountDownTimer timeLeft={countdown_t} />\n    </div>\n\t  <div className='left'>\n\t\t<p>countdown_t: {countdown_t}</p><br/>\n\t\t<p>user_id: {user_id}</p>\n      </div>\n  </section>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { subscribe } from 'mqtt-react';\n\nimport {\n  MQTT_TOPIC_SUBSCRIBE,\n  GAME_TIME_PLAY,\n  user_id\n} from '../../const';\nimport { rgbStringify } from '../../utils';\n//import { setTimer } from '../../api';\nimport Controls from '../Controls';\nimport {LockedScreenHello, LockedScreen0,LockedScreenEnd, LockedScreenNoConnect} from '../LockedScreen';\nimport {ScreenTest} from '../ScreenTest';\n\n\nconst Game = ({ activeColor, setActiveColor, data, mqtt }) => {\n  const [gameTime, setGameTime] = useState(null);\n\n  useEffect(() => {\n    if (data && data.length) {\n      const color = rgbStringify(data[0].color);\n      setActiveColor(color);\n\t  console.log('useEffect',data[0]);\n    }\n    return null;\n  }, [data,setActiveColor]);\n\n  useEffect(() => setGameTimer());\n\n  useEffect(() => {\n    const timer =  setInterval(() => {\n\t\tlet gm_active_till_t = parseInt(localStorage.getItem('gm_active_till_t'));\n\t\tlet countdown=(gm_active_till_t&&(gm_active_till_t-new Date().getTime())>0)?\tMath.floor((gm_active_till_t-new Date().getTime())/1000) :0;\n\t\tsetGameTime(countdown);\n\t\t}, 1000);\n    return () => clearInterval(timer);\n  }, [gameTime]);\n\n  const setGameTimer = () => {\n\n    let now_t = new Date().getTime();\n\tlet gm_active_till_t = parseInt(localStorage.getItem('gm_active_till_t'));\n\t\n\n\t\n\t\n\n    if (gm_active_till_t) {\n\t\tif(now_t < gm_active_till_t)\n\t\t{\n      setGameTime(Math.round((gm_active_till_t - now_t) / 1000));\n      return;\n\t\t}\n\t\telse{\n\t\t\tlet recently_d=2*60*1000;\n\t\t\t//quick fix for react do not refresh page\n\t\t\tif(now_t < gm_active_till_t+recently_d) \n\t\t\t{\n\t\t\t\t window.location.reload();\n\t\t\t}\n\t\t}\n\n    };\n  };\n\n//test\n//return <CountDownTimer />\n//return <LockedScreenEnd />\n//return <LockedScreen0 />\n/*\n  return (\n    <Controls\n      mqtt={mqtt}\n      gameTime={gameTime}\n      activeColor={activeColor}\n      setActiveColor={setActiveColor}\n    />\n  );\n  */\n//console.log('0');\n\tlet now_t=new Date().getTime();\n\tlet gm_active_till_t = parseInt(localStorage.getItem('gm_active_till_t'));\n\t\n\tlet bRunRecently=false;\n\t//let bNotEnd=false;\n\n\tconst redir = () => {\n\t\tconsole.log('redir');\n\t\tif(window.location.search.includes('testesp'))\n\t\t{\t//'?testesp'\n\t\t\treturn <ScreenTest mqtt={mqtt} data={data} redir={1} />\n\t\t}\n\t\t\n\t\treturn <LockedScreenEnd />;\n/*\n\t\tif(now_t>parseInt(localStorage.getItem('redir_visited'))+10*24*60*60*1000) localStorage.removeItem('redir_visited'); //redirect once per 10 deay\n\t\tif(localStorage.getItem('redir_visited'))\n\t\t{\n\t\t\treturn <LockedScreenEnd />;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlocalStorage.setItem('redir_visited',now_t)\n\t\t\twindow.location.href = \"https://tsum.ua/\";//test: if(localStorage.getItem('test_redir')) redir();\n\t\t}\n\t\t*/\n\t}\n\t//TODO localStorage.removeItem('redir_visited')\n\t\n\tif(gm_active_till_t)\n\t{\n\t\tlet recently_d=2*60*1000;\n\t\t\n\t\tif(now_t < gm_active_till_t)\n\t\t{\t//bNotEnd=true;\n\t\t}\n\t\telse\n\t\tif(now_t < gm_active_till_t+recently_d)\n\t\t{\n\t\t\tbRunRecently=true;\n\t\t\t//console.log('bRunRecently',now_t, gm_active_till_t+recently_d, (gm_active_till_t+recently_d)-now_t );\n\t\t\treturn redir();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlocalStorage.removeItem('gm_active_till_t');\n\t\t\tgm_active_till_t=null;\n\t\t}\n\t}\n\t//console.log('all: ',data[0]);\n\tif(data[0])\n\t{\n\t\t//console.log('data',data[0]==true );\n\t\t//console.log(data[0], data[0].user_active, user_id, parseInt(data[0].user_active)==user_id, gm_active_till_t-now_t); \n\t\tvar user_active=parseInt(data[0].user_active);\n\t\t\n\t\tif (user_active===0)\n\t\t{\n\t\t\tif(bRunRecently) \n\t\t\t//block last user for some time to other people can react on game open\n\t\t\t{\n\t\t\t\t//TODO can be smaller than GAME_TIME_PLAY, if no other active users appear\n\t\t\t\t//TODO2 do not off game if nobody else connected\n\t\t\t\treturn redir();\n\t\t\t}\n\t\t\t//else show interface to all users\n\t\t\t//?? now rasp return 0 wo ESP connected\n\t\t}\n\t\telse\n\t\tif (user_active)\n\t\t{\n\t\t\tif (user_active===user_id)\n\t\t\t{ //this user is active\n\t\t\t\tif(!gm_active_till_t) //at start of active\n\t\t\t\t{\n\t\t\t\t\tgm_active_till_t=Math.floor(now_t+GAME_TIME_PLAY*1000);\n\t\t\t\t\tlocalStorage.setItem('gm_active_till_t',gm_active_till_t);\n\t\t\t\t\t\n\t\t\t\t\tlocalStorage.setItem('showHello',now_t);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{ //block other users\n\t\t\t\tif(bRunRecently)\n\t\t\t\t\treturn redir();\n\t\t\t\telse\n\t\t\t\t\treturn <LockedScreen0 />\n\t\t\t}\n\t\t}\n\t\telse return <LockedScreenHello /> //TODO check\n\t}\n\telse\n\t{\t//no data from ESP\n\t\tif(window.location.search.includes('testesp') )\n\t\t{\t//'?testesp'\n\t\t\treturn <ScreenTest mqtt={mqtt} data={\"-\"} />\n\t\t}\n\t\t//console.log('LockedScreenNoConnect: ');\n\t\treturn <LockedScreenNoConnect />\n\t}\n\t\n\tif(window.location.search.includes('testesp'))\n\t{\t//'?testesp'\n\t\treturn <ScreenTest mqtt={mqtt} data={data} />\n\t}\n\n  return (\n    <Controls\n      mqtt={mqtt}\n      gameTime={gameTime}\n      activeColor={activeColor}\n      setActiveColor={setActiveColor}\n    />\n  );\n};\n\nexport default subscribe({ topic: MQTT_TOPIC_SUBSCRIBE })(Game);\n","import React, { useState } from 'react';\n\nimport './styles.css';\nimport { COLOR_DEFAULT } from '../../const';\n//import logo from '../../assets/logo.svg';\nimport Game from '../Game';\nimport {LockedScreenHello} from '../LockedScreen';\n\nconst App = () => {\n  const [activeColor, setActiveColor] = useState(COLOR_DEFAULT);\n//---------- LockedScreenHello\nlet now_t=new Date().getTime();\nlet showHello = parseInt(localStorage.getItem('showHello'));\n//let gm_active_till_t = parseInt(localStorage.getItem('gm_active_till_t'));\n\nif((!showHello || now_t > showHello+60000*3))\n{// && (!gm_active_till_t || now_t>gm_active_till_t)\n  return <LockedScreenHello />\n}\n//----------\t\n     // <a href='https://tsum.ua/' className='logo' target='_blank' rel=\"noreferrer\">\n     //   <img src={logo} alt='ЦУМ Киев'/>\n     // </a>\n  return (\n    <section className='game'>\n      <Game activeColor={activeColor} setActiveColor={setActiveColor} />\n    </section>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Connector } from 'mqtt-react';\n\nimport './index.css';\nimport App from './components/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nconst mqttBrokerUrl = process.env.REACT_APP_MQTT_BROKER_URL;\n\nReactDOM.render(\n  <Connector mqttProps={mqttBrokerUrl}>\n    <App />\n  </Connector>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}